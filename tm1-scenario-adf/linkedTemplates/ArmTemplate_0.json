{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tm1-scenario-adf"
		},
		"ADLS_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_LS'"
		},
		"param_ADLS_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'param_ADLS_LS'"
		},
		"OnPrem_DFF28MNM_SQLServer_IR_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPrem_DFF28MNM_SQLServer_IR'"
		},
		"ADLS_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adftutsa.dfs.core.windows.net/"
		},
		"param_ADLS_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adbtutde.dfs.core.windows.net/"
		},
		"OnPrem_DFF28MNM_SQLServer_IR_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "DESKTOP-FF28MNM\\SQLEXPRESS"
		},
		"OnPrem_DFF28MNM_SQLServer_IR_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorksLT2022"
		},
		"OnPrem_DFF28MNM_SQLServer_IR_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adf_user"
		},
		"onNYCFileCreateTrigger_properties_fileEventPipeline_parameters_sourceFolderPath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"onNYCFileCreateTrigger_properties_fileEventPipeline_parameters_sourceFileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"onNYCFileCreateTrigger_properties_fileEventPipeline_parameters_destinationContainer": {
			"type": "string",
			"defaultValue": " "
		},
		"onNYCFileCreateTrigger_properties_fileEventPipeline_parameters_destinationPath": {
			"type": "string",
			"defaultValue": " "
		},
		"onNYCFileCreateTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/1a56c7a0-0db5-4230-bd79-e450210601b8/resourceGroups/adf-tut-rg/providers/Microsoft.Storage/storageAccounts/adbtutde"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/param_ADLS_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('param_ADLS_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('param_ADLS_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DESKTOP-FF28MNM-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"selfContainedInteractiveAuthoringEnabled": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/paramADLSParquet_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "param_ADLS_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@trim(dataset().file)",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@trim(dataset().path)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@trim(dataset().container)",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/param_ADLS_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/param_CSV_ADLS_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "param_ADLS_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"contianer": {
						"type": "string",
						"defaultValue": " "
					},
					"path": {
						"type": "string",
						"defaultValue": " "
					},
					"filename": {
						"type": "string",
						"defaultValue": " "
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().contianer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/param_ADLS_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem_DFF28MNM_SQLServer_IR')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('OnPrem_DFF28MNM_SQLServer_IR_properties_typeProperties_server')]",
					"database": "[parameters('OnPrem_DFF28MNM_SQLServer_IR_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('OnPrem_DFF28MNM_SQLServer_IR_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPrem_DFF28MNM_SQLServer_IR_password')]"
					}
				},
				"connectVia": {
					"referenceName": "DESKTOP-FF28MNM-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/DESKTOP-FF28MNM-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deleteFilesPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "param_CSV_ADLS_DS",
								"type": "DatasetReference",
								"parameters": {
									"contianer": {
										"value": "@pipeline().parameters.container",
										"type": "Expression"
									},
									"path": {
										"value": "@pipeline().parameters.path",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter Folders",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Folders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Folders').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata of Subfolder",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "param_CSV_ADLS_DS",
											"type": "DatasetReference",
											"parameters": {
												"contianer": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"path": {
													"value": "@concat(pipeline().parameters.path, '/', item().name)",
													"type": "Expression"
												},
												"filename": " "
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Filter non-csv",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Get Metadata of Subfolder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Get Metadata of Subfolder').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@and(\n    equals(item().type,'File'),\n    not(endswith(item().name,'.csv')))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Delete File",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Filter non-csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "param_CSV_ADLS_DS",
											"type": "DatasetReference",
											"parameters": {
												"contianer": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"path": {
													"value": "@concat(pipeline().parameters.path, '/', item().name)",
													"type": "Expression"
												},
												"filename": {
													"value": "@activity('Filter non-csv').output.Value[0].name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "staging"
					},
					"path": {
						"type": "string",
						"defaultValue": "SalesLT"
					},
					"wildcard": {
						"type": "string",
						"defaultValue": " "
					},
					"filename": {
						"type": "string",
						"defaultValue": " "
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/param_CSV_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fileEventPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy taxi data to bronze",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "paramADLSParquet_DS",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@split(pipeline().parameters.sourceFolderPath, '/')[0]",
										"type": "Expression"
									},
									"path": {
										"value": "@split(pipeline().parameters.sourceFolderPath, '/')[1]",
										"type": "Expression"
									},
									"file": {
										"value": "@pipeline().parameters.sourceFileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "paramADLSParquet_DS",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().parameters.destinationContainer",
										"type": "Expression"
									},
									"path": {
										"value": "@pipeline().parameters.destinationPath",
										"type": "Expression"
									},
									"file": {
										"value": "@pipeline().parameters.sourceFileName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourceFolderPath": {
						"type": "string"
					},
					"sourceFileName": {
						"type": "string"
					},
					"destinationContainer": {
						"type": "string",
						"defaultValue": "staging"
					},
					"destinationPath": {
						"type": "string",
						"defaultValue": "NYC_Taxi_Target"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/paramADLSParquet_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem_DFF28MNM_SQLServer_LS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_DFF28MNM_SQLServer_IR",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_DFF28MNM_SQLServer_IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onPremToDelta_FullAndIncrementalLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Schema Details",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Condition",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_CATALOG = 'AdventureWorksLT2022';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "OnPrem_DFF28MNM_SQLServer_LS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Schema Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Schema Details').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "If Condition Incremental",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(pipeline().parameters.incrementalTables, item().TABLE_NAME)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Save Data to Staging FR",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat('SELECT * FROM ', item().TABLE_SCHEMA, '.', item().TABLE_NAME)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "FlattenHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "OnPrem_DFF28MNM_SQLServer_LS",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "param_CSV_ADLS_DS",
														"type": "DatasetReference",
														"parameters": {
															"contianer": {
																"value": "@pipeline().parameters.destination_container",
																"type": "Expression"
															},
															"path": {
																"value": "@concat(item().TABLE_SCHEMA, '/', item().TABLE_NAME)",
																"type": "Expression"
															},
															"filename": {
																"value": "@concat(item().TABLE_NAME, '_', utcNow(), '.csv')",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Save Data to Staging IC",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"sqlReaderQuery": {
															"value": "@concat('SELECT * FROM ', item().TABLE_SCHEMA, '.', item().TABLE_NAME, ' WHERE ModifiedDate=''', pipeline().parameters.ingestionDate, '''')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings",
															"copyBehavior": "FlattenHierarchy"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "OnPrem_DFF28MNM_SQLServer_LS",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "param_CSV_ADLS_DS",
														"type": "DatasetReference",
														"parameters": {
															"contianer": {
																"value": "@pipeline().parameters.destination_container",
																"type": "Expression"
															},
															"path": {
																"value": "@concat(item().TABLE_SCHEMA, '/', item().TABLE_NAME)",
																"type": "Expression"
															},
															"filename": {
																"value": "@concat(item().TABLE_NAME, '_', utcNow(), '.csv')",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "If Condition",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(trim(pipeline().parameters.ingestionDate),'') ",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set Todays Date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ingestionDate",
										"value": {
											"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')\n",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"incrementalTables": {
						"type": "string"
					},
					"ingestionDate": {
						"type": "string"
					},
					"destination_container": {
						"type": "string",
						"defaultValue": "staging"
					}
				},
				"variables": {
					"ingestionDate": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"path": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnPrem_DFF28MNM_SQLServer_LS')]",
				"[concat(variables('factoryId'), '/datasets/param_CSV_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onNYCFileCreateTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "fileEventPipeline",
							"type": "PipelineReference"
						},
						"parameters": {
							"sourceFolderPath": "[parameters('onNYCFileCreateTrigger_properties_fileEventPipeline_parameters_sourceFolderPath')]",
							"sourceFileName": "[parameters('onNYCFileCreateTrigger_properties_fileEventPipeline_parameters_sourceFileName')]",
							"destinationContainer": "[parameters('onNYCFileCreateTrigger_properties_fileEventPipeline_parameters_destinationContainer')]",
							"destinationPath": "[parameters('onNYCFileCreateTrigger_properties_fileEventPipeline_parameters_destinationPath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/staging/blobs/NYC_Taxi/",
					"blobPathEndsWith": ".parquet",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('onNYCFileCreateTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/fileEventPipeline')]"
			]
		}
	]
}